{"version":3,"file":"index.c88cedff.js","sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../src/i18n/i18n.ts","../../src/lib/src/base.ts","../../src/lib/src/component.ts","../../src/lib/src/effects.ts","../../src/lib/src/button.ts","../../src/lib/src/switch.ts","../../src/lib/src/animations.ts","../../src/lib/src/icon.ts","../../src/lib/src/consts.ts","../../src/lib/src/dialog.ts","../../src/lib/src/globals.ts","../../src/ts/stores.ts","../../src/components/Dialog.svelte","../../src/components/Navbar.svelte","../../src/views/App.svelte","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/exio/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import { register, init, getLocaleFromNavigator } from 'svelte-i18n';\n\nregister('en', () => import('./en.json'));\ninit({\n  fallbackLocale: 'en',\n  initialLocale: getLocaleFromNavigator(),\n});\n","export interface ExioNode<T = any> {\n  update?: (opts: T) => void;\n  destroy: () => void;\n}\n\nexport function getRandomString(len = 10) {\n  const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  let randomString = 'exio-';\n  for (let i = 0; i < len; i++) {\n    const pos = Math.floor(Math.random() * charSet.length);\n    randomString += charSet.substring(pos, pos + 1);\n  }\n  return randomString;\n}\n\nexport function destroyer(...destroyers: ExioNode['destroy'][]): {\n  destroy(): void;\n} {\n  return {\n    destroy() {\n      destroyers.forEach((d) => {\n        d();\n      });\n    },\n  };\n}\n\n/**\n * Generate update() function for ExioNode.\n *\n * use: actions can have an update method to enable reactive props to the action.\n *\n * This updater assumes that the options given to the update function are for styling\n * purposes. It will update the style based upon the props given and a map between\n * a prop name the css property it references.\n */\nexport function updater<T>(\n  initialOpts: T,\n  node: HTMLElement,\n  optMap: Record<keyof T, { prop: string }>\n): { update(opts: T): void } {\n  let prevOpts = initialOpts;\n  const update = (opts: T) => {\n    Object.keys(prevOpts).forEach((opt) => {\n      node.style.removeProperty(optMap[opt].prop);\n    });\n    Object.entries(opts).forEach(([prop, val]) => {\n      node.style.setProperty(optMap[prop].prop, `${val}`);\n    });\n    prevOpts = opts;\n  };\n  update(initialOpts);\n  return { update };\n}\n\nexport function styler(node: HTMLElement) {\n  const id = getRandomString();\n  const style = document.getElementById(id) || document.createElement('style');\n  style.id = id;\n  node.classList.add(id);\n  document.head.appendChild(style);\n  return style as HTMLStyleElement;\n}\n\nexport function getMouseInfo(\n  node: HTMLElement,\n  event: MouseEvent | Touch\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n} {\n  const { left, top, width, height } = node.getBoundingClientRect();\n  const { clientX, clientY } = event;\n  const [x, y] = [clientX - left, clientY - top];\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n}\n\nexport function toMillis(s: string) {\n  return parseFloat(s) * (/\\ds$/.test(s) ? 1000 : 1);\n}\n","import { destroyer, updater } from './base';\nimport type { ExioNode } from './base';\n\nexport const componentVars = {};\n\nexport type ExioComponentArgs = Partial<{\n  [Prop in keyof typeof componentVars]:\n    | typeof componentVars[Prop]['val']\n    | string;\n}>;\n\nexport function exioComponent(\n  node: HTMLElement,\n  opts: ExioComponentArgs = {}\n): ExioNode<ExioComponentArgs> {\n  node.classList.add('exio-component');\n  let style = document.querySelector('#exio-styles') as HTMLStyleElement | null;\n  if (!style) {\n    style = document.createElement('style');\n    style.id = 'exio-styles';\n    style.innerHTML = `\n      .exio-component {\n        /* --------------------------- */\n        /* CUSTOMIZABLE EXIO VARIABLES */\n        /* --------------------------- */\n        /* backdrop color for dialogs and other popups */\n        --exio-backdrop-color: rgba(128, 128, 128, 0.2);\n        /* border width for various effects */\n        --exio-border-width: 2px;\n        /* scaling factor for elements while being clicked */\n        --exio-clicking-scale: 0.95;\n        /* color of checkbox checkmarks when selected */\n        --exio-checkbox-checkmark-color: white;\n        /* color of checkbox fill when selected */\n        --exio-checkbox-checked-fill-color: black;\n        /* filter for disabled fields */\n        --exio-disabled-filter: brightness(1.2) grayscale(0.5);\n        /* border color for focused elements */\n        --exio-focused-border-color: rgba(0, 0, 0, 0.5);\n        /* scaling factor for the acrylic hover highlight effect */\n        --exio-hover-background-scale: 4;\n        /* body color for the acrylic hover highlight effect */\n        --exio-hover-body-color: rgba(128, 128, 128, 0.3);\n        /* border color for the acrylic hover highlight effect */\n        --exio-hover-border-color: rgba(0, 0, 0, 0.25);\n        /* scaling factor for the acrylic hover highlight effect */\n        --exio-hover-border-scale: 2;\n        /* fill color for progress bars and loaders */\n        --exio-loader-fill-color: black;\n        /* animation duration for progress bars and loaders */\n        --exio-loader-duration: 1s;\n        /* color of radio indicators */\n        --exio-radio-indicator-color: black;\n        /* color of slider thumbs */\n        --exio-slider-thumb-color: black;\n        /* size of slider thumbs */\n        --exio-slider-thumb-size: 12px;\n        /* size of slider thumbs outlines when hovered */\n        --exio-slider-thumb-hover-outline-size: 18px;\n        /* size of slider thumb outlines when grabbing */\n        --exio-slider-thumb-grab-outline-size: 25px;\n        /* size of slider tracks */\n        --exio-slider-track-size: 4px;\n        /* fast transition duration */\n        --exio-fast-transition-duration: 0.1s;\n        /* slow transition duration */\n        --exio-slow-transition-duration: 0.4s;\n        /* standard transition duration */\n        --exio-standard-transition-duration: 0.2s;\n        /* color of switch background when selected */\n        --exio-switch-checked-fill-color: darkgray;\n        /* switch thumb color */\n        --exio-switch-thumb-color: black;\n        /* default text color for components */\n        --exio-default-text-color: black;\n        /* scaling factor for the zoom in animation */\n        --exio-zoom-in-animation-scale: 97.5%;\n      }\n      .exio-component {\n        --is-exio-component: true;\n        --exio-theme: light;\n        color: var(--exio-default-text-color);\n      }\n      [data-theme=\"dark\"] .exio-component, .exio-component[data-theme=\"dark\"] {\n        --exio-disabled-filter: brightness(0.6) grayscale(0.5);\n        --exio-focused-border-color: rgba(255, 255, 255, 1);\n        --exio-hover-background-scale: 4;\n        --exio-hover-body-color: rgba(128, 128, 128, 0.3);\n        --exio-hover-border-color: rgba(255, 255, 255, 0.5);\n        --exio-hover-border-scale: 2;\n        --exio-loader-fill-color: white;\n        --exio-loader-duration: 1s;\n        --exio-switch-checked-fill-color: white;\n        --exio-checkbox-checkmark-color: black;\n        --exio-checkbox-checked-fill-color: white;\n        --exio-slider-thumb-color: white;\n        --exio-switch-thumb-color: white;\n        --exio-radio-indicator-color: white;\n        --exio-theme: dark;\n        --exio-default-text-color: white;\n      }\n      @font-face {\n        font-family: 'Segoe UI';\n        src: local('Segoe UI Light'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff2) format('woff2'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.woff) format('woff'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/light/latest.ttf) format('truetype');\n        font-weight: 100;\n      }\n      @font-face {\n        font-family: 'Segoe UI';\n        src: local('Segoe UI Semilight'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff2) format('woff2'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.woff) format('woff'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semilight/latest.ttf) format('truetype');\n        font-weight: 200;\n      }\n      @font-face {\n        font-family: 'Segoe UI';\n        src: local('Segoe UI'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff2) format('woff2'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.woff) format('woff'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/normal/latest.ttf) format('truetype');\n        font-weight: 400;\n      }\n      @font-face {\n        font-family: 'Segoe UI';\n        src: local('Segoe UI Semibold'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff2) format('woff2'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.woff) format('woff'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/semibold/latest.ttf) format('truetype');\n        font-weight: 600;\n      }\n      @font-face {\n        font-family: 'Segoe UI';\n        src: local('Segoe UI Bold'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff2) format('woff2'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.woff) format('woff'),\n          url(//c.s-microsoft.com/static/fonts/segoe-ui/west-european/bold/latest.ttf) format('truetype');\n        font-weight: 700;\n      }\n    `;\n    document.head.appendChild(style);\n  }\n  return {\n    ...updater(opts, node, componentVars),\n    ...destroyer(() => {\n      node.classList.remove('exio-component');\n    }),\n  };\n}\n","import { destroyer, getMouseInfo, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioComponent } from './component';\n\nexport type PointerEffectOptions = {\n  borderStyle: 'reactive' | 'static' | 'hover' | 'none';\n  disableClicking: boolean;\n  focusable: boolean;\n};\n\nconst defaultOptions: PointerEffectOptions = {\n  borderStyle: 'reactive',\n  disableClicking: false,\n  focusable: false,\n};\n\nexport const pointerEffectVars = {\n  borderWidth: {\n    prop: '--exio-border-width',\n    val: '',\n  },\n  clickingScale: {\n    prop: '--exio-clicking-scale',\n    val: '',\n  },\n  disabledFilter: {\n    prop: '--exio-disabled-filter',\n    val: '',\n  },\n  focusedBorderColor: {\n    prop: '--exio-focused-border-color',\n    val: '',\n  },\n  hoverBackgroundScale: {\n    prop: '--exio-hover-background-scale',\n    val: '',\n  },\n  hoverBodyColor: {\n    prop: '--exio-hover-body-color',\n    val: '',\n  },\n  hoverBorderColor: {\n    prop: '--exio-hover-border-color',\n    val: '',\n  },\n  hoverBorderScale: {\n    prop: '--exio-hover-border-scale',\n    val: '',\n  },\n  transitionDuration: {\n    prop: '--exio-standard-transition-duration',\n    val: '',\n  },\n};\n\nexport function exioPointerEffect(\n  node: HTMLElement,\n  additionalOptions: Partial<PointerEffectOptions> = defaultOptions\n): ExioNode {\n  const options = { ...defaultOptions, ...additionalOptions };\n  const component = exioComponent(node);\n  const s = styler(node);\n  const updateStyle = (mouseX = 0, mouseY = 0, width = 0, height = 0) => {\n    const borderHoverRadius = `calc(\n      ${Math.max(width, height)}px * var(--exio-hover-border-scale)\n    )`;\n    const useStaticBorder = options.borderStyle === 'static';\n    const useHoverBorder = options.borderStyle === 'hover';\n    const dontTouchBorder = options.borderStyle === 'none';\n    const borderStr =\n      useStaticBorder || useHoverBorder\n        ? 'border: var(--exio-border-width) solid var(--exio-hover-border-color)'\n        : `border-image: radial-gradient(\n          ${borderHoverRadius} ${borderHoverRadius} at var(--exio-mouse-x) var(--exio-mouse-y),\n          var(--exio-hover-border-color) 0%,\n          transparent calc(100% * var(--exio-hover-border-scale))\n        ) 9 / var(--exio-border-width) / 0px stretch`;\n    const hoverBorder = dontTouchBorder ? '' : borderStr;\n    const hoverBackground = !useHoverBorder\n      ? `\n        background-image: radial-gradient(\n          calc(\n            ${Math.max(width, height)}px *\n            var(--exio-hover-background-scale)\n          ) at ${mouseX}px ${mouseY}px,\n          var(--exio-hover-body-color) 0%,\n          transparent 100%\n        )\n      `\n      : '';\n    const focusedBorder = options.focusable\n      ? 'border: var(--exio-border-width) solid var(--exio-focused-border-color)'\n      : '';\n    const focusableActive = focusedBorder ? ':not(:focus)' : '';\n    s.innerHTML = `\n      .${s.id} {\n        outline: none;\n        border: var(--exio-border-width) solid transparent;\n        color: inherit;\n        font-size: inherit;\n        font-family: inherit;\n        padding: 0.25em 0.75em;\n        overflow: hidden;\n        border-radius: 0px;\n        ${useStaticBorder ? hoverBorder : ''};\n\n        --exio-mouse-x: ${mouseX}px;\n        --exio-mouse-y: ${mouseY}px;\n        transition: transform var(--exio-standard-transition-duration);\n      }\n      .${s.id}:hover:not(.${s.id}-active)${focusableActive} {\n        ${hoverBorder};\n        background-size: calc(100% + 2 * var(--exio-border-width));\n        background-position: center;\n        ${hoverBackground};\n        transition: transform var(--exio-standard-transition-duration);\n      }\n      .${s.id}:focus {\n        ${focusedBorder};\n      }\n      .${s.id}.${s.id}-active {\n        filter: brightness(0.8);\n        transition: none;\n        transform: scale(var(--exio-clicking-scale));\n      }\n      .${s.id}:disabled {\n        pointer-events: none;\n        touch-action: none;\n        filter: var(--exio-disabled-filter);\n      }\n    `;\n  };\n  updateStyle();\n  function onHover(e: MouseEvent) {\n    const { x, y, width, height } = getMouseInfo(node, e);\n    node.removeEventListener('mousemove', onHover);\n    if (node.matches(':hover')) {\n      updateStyle(x, y, width, height);\n      node.addEventListener('mousemove', onHover);\n    }\n  }\n  node.addEventListener('mouseenter', onHover);\n  const onMouseDown = () => {\n    node.classList.add(`${s.id}-active`);\n  };\n  const onMouseUp = () => {\n    node.classList.remove(`${s.id}-active`);\n  };\n  if (!options.disableClicking) {\n    node.addEventListener('touchstart', onMouseDown);\n    window.addEventListener('touchend', onMouseUp);\n    node.addEventListener('mousedown', onMouseDown);\n    window.addEventListener('mouseup', onMouseUp);\n    window.addEventListener('dragend', onMouseUp);\n  }\n  return destroyer(() => {\n    node.removeEventListener('mouseenter', onHover);\n    node.removeEventListener('mousemove', onHover);\n    if (!options.disableClicking) {\n      node.removeEventListener('touchstart', onMouseDown);\n      window.removeEventListener('touchend', onMouseUp);\n      node.removeEventListener('mousedown', onMouseDown);\n      window.removeEventListener('mouseup', onMouseUp);\n      window.removeEventListener('dragend', onMouseUp);\n      node.remove();\n      s.remove();\n    }\n    component.destroy();\n  });\n}\n","import { destroyer, updater, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect, pointerEffectVars } from './effects';\nimport { exioComponent } from './component';\n\nexport const buttonVars = {\n  backgroundColor: {\n    prop: 'background-color',\n    val: '',\n  },\n  textColor: {\n    prop: 'color',\n    val: '',\n  },\n  ...pointerEffectVars,\n};\n\nexport type ExioButtonArgs = Partial<{\n  [Prop in keyof typeof buttonVars]: typeof buttonVars[Prop]['val'] | string;\n}>;\n\nexport function exioButton(\n  node: HTMLButtonElement,\n  opts: ExioButtonArgs = {}\n): ExioNode<ExioButtonArgs> {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node);\n  const s = styler(node);\n  s.innerHTML = `\n    .${s.id} {\n      user-select: none;\n    }\n  `;\n\n  return {\n    ...updater(opts, node, buttonVars),\n    ...destroyer(() => {\n      effect.destroy();\n      s.remove();\n      component.destroy();\n    }),\n  };\n}\n","import { destroyer, styler, updater } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\n\nexport const switchVars = {\n  backgroundColor: {\n    prop: 'background-color',\n    val: '',\n  },\n  borderWidth: {\n    prop: '--exio-border-width',\n    val: '',\n  },\n  checkedFillColor: {\n    prop: '--exio-switch-checked-fill-color',\n    val: '',\n  },\n  switchThumbColor: {\n    prop: '--exio-switch-thumb-color',\n    val: '',\n  },\n  transitionDuration: {\n    prop: '--exio-standard-transition-duration',\n    val: '',\n  },\n  hoverBackgroundScale: {\n    prop: '--exio-hover-background-scale',\n    val: '',\n  },\n  hoverBodyColor: {\n    prop: '--exio-hover-body-color',\n    val: '',\n  },\n  clickingScale: {\n    prop: '--exio-clicking-scale',\n    val: '',\n  },\n  disabledFilter: {\n    prop: '--exio-disabled-filter',\n    val: '',\n  },\n};\n\nexport type ExioSwitchArgs = Partial<{\n  [Prop in keyof typeof switchVars]: typeof switchVars[Prop]['val'] | string;\n}>;\n\nexport function exioSwitch(\n  node: HTMLInputElement,\n  opts: ExioSwitchArgs = {}\n): ExioNode<ExioSwitchArgs> {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node, {\n    borderStyle: 'static',\n  });\n  const s1 = styler(node);\n  s1.innerHTML = `\n    .${s1.id} {\n      -webkit-appearance: none;\n      width: 48px;\n      height: 20px;\n      border-radius: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      overflow: visible;\n      border-color: black;\n      background-color: var(--exio-switch-checked-fill-color);\n    }\n    [data-theme=dark] .${s1.id} {\n      border-color: white;\n    }\n    .${s1.id}:not(:checked) {\n      background-color: transparent;\n    }\n  `;\n  const s2 = styler(node);\n  s2.innerHTML = `\n    .${s2.id}::after {\n      content: '';\n      position: absolute;\n      width: ${node.clientHeight}px;\n      height: ${node.clientHeight}px;\n      border-radius: 100%;\n      transform: translateX(calc(\n        ${-node.clientWidth / 2}px + ${node.clientHeight / 2}px\n      )) scale(0.55);\n      background-color: var(--exio-switch-thumb-color);\n      transition: transform var(--exio-standard-transition-duration);\n    }\n    .${s2.id}:checked::after {\n      transform: translateX(calc(\n        ${node.clientWidth / 2}px - ${node.clientHeight / 2}px\n      )) scale(0.5);\n    }\n  `;\n  return {\n    ...updater(opts, node, switchVars),\n    ...destroyer(() => {\n      effect.destroy();\n      s1.remove();\n      s2.remove();\n      component.destroy();\n    }),\n  };\n}\n","import { destroyer, styler, updater } from './base';\nimport type { ExioNode } from './base';\nimport { exioComponent } from './component';\n\nexport const animationVars = {\n  animationDuration: {\n    prop: 'animation-duration',\n    val: '',\n  },\n};\n\nexport type ExioAnimationArgs = Partial<{\n  [Prop in keyof typeof animationVars]:\n    | typeof animationVars[Prop]['val']\n    | string;\n}>;\n\nexport function exioFlyInAnimation(\n  node: HTMLElement,\n  opts: ExioAnimationArgs = {}\n): ExioNode<ExioAnimationArgs> {\n  const component = exioComponent(node);\n  const s = styler(node);\n  s.innerHTML = `\n    @keyframes exio-fly-in {\n      from {\n        transform: translateY(50%);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0%);\n        opacity: 1;\n      }\n    }\n    .${s.id} {\n      animation: exio-fly-in;\n      animation-duration: 0.6s;\n      animation-fill-mode: forwards;\n      opacity: 0;\n    }\n  `;\n  return {\n    ...updater(opts, node, animationVars),\n    ...destroyer(() => {\n      s.remove();\n      component.destroy();\n    }),\n  };\n}\n\nexport function exioFadeInAnimation(\n  node: HTMLElement,\n  opts: ExioAnimationArgs = {}\n): ExioNode<ExioAnimationArgs> {\n  const component = exioComponent(node);\n  const s = styler(node);\n  s.innerHTML = `\n    @keyframes exio-fade-in {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n    .${s.id} {\n      animation: exio-fade-in;\n      animation-duration: 0.6s;\n      animation-fill-mode: forwards;\n      opacity: 0;\n    }\n  `;\n  return {\n    ...updater(opts, node, animationVars),\n    ...destroyer(() => {\n      s.remove();\n      component.destroy();\n    }),\n  };\n}\n\nexport const zoomInAnimationVars = {\n  animationScale: {\n    prop: '--exio-zoom-in-animation-scale',\n    val: '',\n  },\n  ...animationVars,\n};\n\nexport type ExioZoomInAnimationArgs = Partial<{\n  [Prop in keyof typeof zoomInAnimationVars]:\n    | typeof zoomInAnimationVars[Prop]['val']\n    | string;\n}>;\n\nexport function exioZoomInAnimation(\n  node: HTMLElement,\n  opts: ExioZoomInAnimationArgs = {}\n): ExioNode<ExioZoomInAnimationArgs> {\n  const component = exioComponent(node);\n  const s = styler(node);\n  s.innerHTML = `\n    @keyframes exio-zoom-in {\n      from {\n        transform: scale(var(--exio-zoom-in-animation-scale));\n        opacity: 0;\n      }\n      to {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n    .${s.id} {\n      animation: exio-zoom-in;\n      animation-duration: 0.5s;\n      animation-fill-mode: forwards;\n      opacity: 0;\n    }\n  `;\n  return {\n    ...updater(opts, node, zoomInAnimationVars),\n    ...destroyer(() => {\n      s.remove();\n      component.destroy();\n    }),\n  };\n}\n\nexport const loadingBarVars = {\n  ...animationVars,\n  animationDuration: {\n    prop: '--exio-loader-duration',\n    val: '',\n  },\n  fillColor: {\n    prop: '--exio-loader-fill-color',\n    val: '',\n  },\n  backgroundColor: {\n    prop: 'background-color',\n    val: '',\n  },\n};\n\nexport type ExioLoadingBarArgs = Partial<{\n  [Prop in keyof typeof loadingBarVars]:\n    | typeof loadingBarVars[Prop]['val']\n    | string;\n}>;\n\nexport function exioLoadingBarAnimation(\n  node: HTMLDivElement,\n  opts: ExioLoadingBarArgs = {}\n): ExioNode<ExioLoadingBarArgs> {\n  const component = exioComponent(node);\n  const s = styler(node);\n  s.innerHTML = `\n    @keyframes exio-loading-bar {\n      from {\n        background-position: 100% 0;\n      }\n      to {\n        background-position: 0 0;\n      }\n    }\n    .${s.id} {\n      background-image: linear-gradient(\n        to right,\n        var(--exio-loader-fill-color) 0%,\n        var(--exio-loader-fill-color) 25%,\n        transparent 25%,\n        transparent 50%,\n        var(--exio-loader-fill-color) 50%,\n        var(--exio-loader-fill-color) 75%,\n        transparent 75%,\n        transparent 100%\n      );\n      background-size: 200% 100%;\n      animation: exio-loading-bar var(--exio-loader-duration) linear infinite;\n    }\n  `;\n  return {\n    ...updater(opts, node, loadingBarVars),\n    ...destroyer(() => {\n      s.remove();\n      component.destroy();\n    }),\n  };\n}\n","import { destroyer, styler, updater } from './base';\nimport type { ExioNode } from './base';\nimport { exioComponent } from './component';\n\nexport function createExioIconsFont(): void {\n  let font = document.querySelector(\n    '#exio-icons-font'\n  ) as HTMLLinkElement | null;\n  if (!font) {\n    font = document.createElement('link');\n    font.id = 'exio-icons-font';\n    font.href = '//fonts.googleapis.com/icon?family=Material+Icons';\n    font.rel = 'stylesheet';\n    document.body.appendChild(font);\n  }\n}\n\nexport const iconVars = {};\n\nexport type ExioIconArgs = Partial<{\n  [Prop in keyof typeof iconVars]: typeof iconVars[Prop]['val'] | string;\n}>;\n\nexport const exioIcon = (\n  node: HTMLElement,\n  opts: ExioIconArgs = {}\n): ExioNode<ExioIconArgs> => {\n  const component = exioComponent(node);\n  createExioIconsFont();\n  const s = styler(node);\n  // https://developers.google.com/fonts/docs/material_icons\n  s.innerHTML = `\n    .${s.id} {\n      font-family: 'Material Icons';\n      font-weight: normal;\n      font-style: normal;\n      display: inline-block;\n      line-height: 1;\n      text-transform: none;\n      letter-spacing: normal;\n      word-wrap: normal;\n      white-space: nowrap;\n      direction: ltr;\n      -webkit-font-smoothing: antialiased;\n      text-rendering: optimizeLegibility;\n      -moz-osx-font-smoothing: grayscale;\n      font-feature-settings: 'liga';\n    }\n  `;\n  return {\n    ...updater(opts, node, iconVars),\n    ...destroyer(() => {\n      s.remove();\n      component.destroy();\n    }),\n  };\n};\n","export const isSafari = /^((?!chrome|android).)*safari/i.test(\n  navigator.userAgent\n);\nexport const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n","import { destroyer, styler, updater } from './base';\nimport type { ExioNode } from './base';\nimport dialogPolyfill from 'dialog-polyfill';\nimport { exioComponent } from './component';\n\n/**\n * HTMLDialogELement\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement\n */\ninterface HTMLDialogElement extends globalThis.HTMLDialogElement {\n  /**\n   * Reflects the open HTML attribute,\n   * indicating that the dialog is available for interaction.\n   */\n  open: boolean;\n  /**\n   * Gets/sets the return value for the dialog.\n   */\n  returnValue: string;\n  /**\n   * Closes the dialog. An optional DOMString may be passed as an argument,\n   * updating the returnValue of the the dialog.\n   */\n  close(): void;\n  /**\n   * Displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog.\n   * An optional Element or MouseEvent may be passed as an argument,\n   * to specify an anchor point to which the dialog is fixed.\n   */\n  show(): void;\n  /**\n   * Displays the dialog for exclusive interaction, over the top of any other dialogs that might be present.\n   * An optional Element or MouseEvent may be passed as an argument,\n   * to specify an anchor point to which the dialog is fixed.\n   */\n  showModal(): void;\n}\n\nexport const dialogVars = {\n  backgroundColor: {\n    prop: 'background-color',\n    val: '',\n  },\n  transitionDuration: {\n    prop: '--exio-slow-transition-duration',\n    val: '',\n  },\n  backdopColor: {\n    prop: '--exio-backdrop-color',\n    val: '',\n  },\n};\n\nexport type ExioDialogArgs = Partial<{\n  [Prop in keyof typeof dialogVars]: typeof dialogVars[Prop]['val'] | string;\n}>;\n\nexport function exioDialog(\n  node: HTMLDialogElement,\n  opts: ExioDialogArgs = {}\n): ExioNode<ExioDialogArgs> {\n  const component = exioComponent(node);\n  let isOpen = Boolean(node.open);\n  const s = styler(node);\n  s.innerHTML = `\n    @keyframes exio-dialog-fade-in {\n      0% {\n        opacity: 0;\n        transform: scale(0);\n      }\n      100% {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes exio-dialog-fade-out {\n      0% {\n        opacity: 1;\n        transform: scale(1) translateY(-50%);\n      }\n      100% {\n        opacity: 0;\n        transform: scale(0) translateY(-50%);\n      }\n    }\n    .${s.id} {\n      border-radius: 0px;\n      border: 0px solid transparent;\n      z-index: 69420;\n    }\n    .${s.id}::backdrop {\n      background-color: transparent;\n    }\n    .${s.id}:not([open]) {\n      display: block;\n      position: fixed;\n      top: 50%;\n      transform-origin: top center;\n      transform: translateY(-50%);\n    }\n    .${s.id}[open] {\n      transform-origin: center center;\n      animation-name: exio-dialog-fade-in;\n      animation-duration: var(--exio-slow-transition-duration);\n      animation-fill-mode: forwards;\n    }\n  `;\n  dialogPolyfill.registerDialog(node);\n  node.close();\n  if (isOpen) {\n    node.showModal();\n  }\n  const s2 = styler(node);\n  s2.innerHTML = `\n    .${s2.id}:not([open]) {\n      display: none;\n    }\n  `;\n  const anistarted = () => {\n    s2.innerHTML = `\n      .${s2.id}:not([open]) {\n        animation-name: exio-dialog-fade-out;\n        animation-duration: var(--exio-slow-transition-duration);\n        animation-fill-mode: forwards;\n      }\n    `;\n    node.removeEventListener('animationstart', anistarted);\n  };\n  node.addEventListener('animationstart', anistarted);\n  const backdrop = document.createElement('div');\n  const s3 = styler(backdrop);\n  const updateBackDrop = () => {\n    const computed = getComputedStyle(node);\n    const transitionDuration = computed.getPropertyValue(\n      '--exio-slow-transition-duration'\n    );\n    const backdropColor = computed.getPropertyValue('--exio-backdrop-color');\n    s3.innerHTML = `\n      .${s3.id} {\n        position: fixed;\n        top: 0px;\n        left: 0px;\n        width: 100%;\n        height: 100%;\n        background-color: ${backdropColor};\n        transition: opacity ${transitionDuration};\n        pointer-events: none;\n        touch-action: none;\n        z-index: 42069;\n      }\n    `;\n    backdrop.style.opacity = isOpen ? '1' : '0';\n  };\n  updateBackDrop();\n  node.parentElement.appendChild(backdrop);\n  const observe = () =>\n    observer.observe(node, {\n      attributes: true,\n      attributeFilter: ['open'],\n    });\n  const observer = new MutationObserver(() => {\n    isOpen = Boolean(node.open);\n    observer.disconnect();\n    node.show();\n    node.close();\n    updateBackDrop();\n    if (isOpen) {\n      node.showModal();\n    }\n    observe();\n  });\n  observe();\n  return {\n    ...updater(opts, node, dialogVars),\n    ...destroyer(() => {\n      s.remove();\n      node.removeEventListener('animationstart', anistarted);\n      if (s2) s2.remove();\n      s3.remove();\n      observer.disconnect();\n      component.destroy();\n    }),\n  };\n}\n","import { destroyer, styler, updater } from './base';\nimport type { ExioNode } from './base';\n\nexport const globalStylerVars = {};\n\nexport type ExioGlobalStylerArgs = Partial<{\n  [Prop in keyof typeof globalStylerVars]:\n    | typeof globalStylerVars[Prop]['val']\n    | string;\n}>;\n\nexport function exioGlobalStyler(\n  node: HTMLElement,\n  opts: ExioGlobalStylerArgs = {}\n): ExioNode<ExioGlobalStylerArgs> {\n  const s = styler(node);\n  s.innerHTML = `\n    body {\n      margin: 0;\n      padding: 0;\n    }\n\n    * {\n      font-family: 'Segoe UI';\n    }\n\n    * ::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n    \n    * ::-webkit-scrollbar-track {\n      background: transparent;\n    }\n    \n    * ::-webkit-scrollbar-thumb {\n      background: #888;\n    }\n    \n    * ::-webkit-scrollbar-thumb:hover {\n      background: #555;\n    }\n\n    * ::-webkit-scrollbar-corner {\n      background: transparent;\n    }\n    \n    * {\n      scrollbar-width: thin;\n      scrollbar-color: #888 transparent;\n    }\n  `;\n  return {\n    ...updater(opts, node, globalStylerVars),\n    ...destroyer(() => {\n      s.remove();\n    }),\n  };\n}\n","import { derived, writable } from 'svelte/store';\nimport { writable as persistentWritable } from 'svelte-local-storage-store';\n\nexport const dark = persistentWritable('dark', true);\nexport const dataTheme = derived(dark, ($dark) => {\n  return $dark ? 'dark' : 'light';\n});\nexport const demoDialogOpen = writable(false);\n","<script lang=\"ts\">\n  import { exioButton, exioDialog } from 'exio/svelte';\n  import { demoDialogOpen } from '../ts/stores';\n</script>\n\n<dialog\n  use:exioDialog\n  open={$demoDialogOpen}\n  class=\"dialog\"\n  style=\"width: min(300px, 100%);\"\n>\n  <h2>Hello World!</h2>\n  <p>Exio uses the HTML dialog element.</p>\n  <button\n    use:exioButton\n    class=\"blue\"\n    style=\"float: right;\"\n    on:click={() => ($demoDialogOpen = false)}\n  >\n    Close\n  </button>\n  <!-- <select use:exioDropdown class=\"gray\">\n    <option>Option 1</option>\n    <option>Option 2</option>\n    <option>Option 3</option>\n  </select> -->\n</dialog>\n\n<style>\n  h2 {\n    margin: 0;\n  }\n  .dialog {\n    background-color: white;\n    color: black;\n  }\n  :global([data-theme='dark']) .dialog {\n    background-color: black;\n    color: white;\n  }\n</style>\n","<script lang=\"ts\">\n  import { dark } from '../ts/stores';\n  import {\n    exioIcon,\n    exioSwitch,\n    exioZoomInAnimation,\n    exioButton,\n  } from 'exio/svelte';\n</script>\n\n<div class=\"navbar\" use:exioZoomInAnimation>\n  <div class=\"home\">\n    <a href=\"#/\">\n      <button use:exioButton class=\"home-button\">\n        <span use:exioIcon>home</span>\n      </button>\n    </a>\n  </div>\n  <div class=\"toggler\">\n    <span use:exioIcon>light_mode</span>\n    <input type=\"checkbox\" use:exioSwitch id=\"dark-mode\" bind:checked={$dark} />\n    <span use:exioIcon>dark_mode</span>\n  </div>\n</div>\n\n<style>\n  :global([data-theme='dark']) input[type='checkbox'] {\n    border-color: white;\n    --exio-switch-thumb-color: white;\n  }\n  :global([data-theme='light']) input[type='checkbox'] {\n    border-color: black;\n    --exio-switch-thumb-color: black;\n  }\n  .toggler {\n    display: flex;\n    font-size: 1.6rem;\n    align-items: center;\n    margin-right: 0.5rem;\n    color: black;\n    cursor: default;\n    user-select: none;\n  }\n  .home {\n    display: flex;\n    align-items: center;\n    margin-right: 0.5rem;\n    color: black;\n    cursor: default;\n    user-select: none;\n  }\n  :global([data-theme='dark']) .toggler {\n    color: white;\n  }\n  .navbar {\n    position: fixed;\n    z-index: 100;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: space-between;\n    background-color: #85ccff;\n    border-bottom: 2px solid gray;\n  }\n  .home-button {\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n    background-color: transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.5rem;\n  }\n  :global([data-theme='dark']) .home-button {\n    color: white;\n  }\n  :global([data-theme='light']) .home-button {\n    color: black;\n  }\n  .toggler > input {\n    --exio-switch-checked-fill-color: transparent;\n  }\n  :global([data-theme='dark']) .navbar {\n    background-color: #00325a;\n  }\n  * {\n    -webkit-tap-highlight-color: transparent;\n  }\n</style>\n","<script lang=\"ts\">\n  import Router from 'svelte-spa-router';\n  import { wrap } from 'svelte-spa-router/wrap';\n  import Dialog from '../components/Dialog.svelte';\n  import Navbar from '../components/Navbar.svelte';\n  import { dark, dataTheme } from '../ts/stores';\n  import { exioGlobalStyler } from 'exio/svelte';\n  let routes: {\n    [key: string]: any;\n  } = {\n    '/': wrap({\n      asyncComponent: () => import('../components/Home.svelte'),\n    }),\n    '/docs': wrap({\n      asyncComponent: () => import('../docs/Docs.svelte'),\n    }),\n  };\n  $: document.body.parentElement.style.setProperty('color-scheme', $dataTheme);\n  $: document.body.classList[$dark ? 'add' : 'remove']('dark');\n</script>\n\n<div data-theme={$dataTheme} use:exioGlobalStyler>\n  <Navbar />\n  <Dialog />\n  <Router {routes} />\n</div>\n\n<style>\n  :global([data-theme='dark'] .gray) {\n    background-color: #333;\n  }\n  :global([data-theme='dark'] .cyan) {\n    background-color: darkcyan;\n  }\n  :global(#app) {\n    min-height: 100%;\n    min-width: 100%;\n    --accent: #5dceff;\n    --cyan: turquoise;\n  }\n  :global(#app [data-theme='dark']) {\n    --accent: #0065c7;\n    --cyan: darkcyan;\n  }\n  :global(.cyan) {\n    background-color: turquoise;\n  }\n  :global(.blue) {\n    background-color: var(--accent);\n  }\n  :global(.gray) {\n    background-color: #cacaca;\n  }\n</style>\n","import './i18n/i18n';\nimport App from './views/App.svelte';\n\nconst app = new App({\n  target: document.getElementById('app'),\n});\n\n// if (import.meta.hot) {\n//   import.meta.hot.on('vite:beforeUpdate', () => location.reload());\n// }\n\nexport default app;\n"],"names":["register","init","getLocaleFromNavigator","persistentWritable","writable"],"mappings":"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"}