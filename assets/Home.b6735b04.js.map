{"version":3,"file":"Home.b6735b04.js","sources":["../../src/lib/src/card.ts","../../src/lib/src/dropdown.ts","../../src/lib/src/radio.ts","../../src/lib/src/checkbox.ts","../../src/lib/src/textbox.ts","../../src/lib/src/accordion.ts","../../src/lib/src/slider.ts","../../src/ts/constants.ts","../../src/components/Examples.svelte","../../node_modules/prismjs/prism.js","../../node_modules/prism-svelte/index.js","../../src/components/Demo.svelte?raw","../../src/ts/example.ts","../../src/components/Example.svelte","../../src/components/Demo.svelte","../../src/components/Home.svelte"],"sourcesContent":["import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\n\nexport function exioCard(node: HTMLElement): ExioNode {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node, {\n    borderStyle: 'hover',\n    disableClicking: true,\n  });\n  const s = styler(node);\n  s.innerHTML = `\n    .${s.id} {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0px;\n    }\n  `;\n  return destroyer(() => {\n    effect.destroy();\n    s.remove();\n    component.destroy();\n  });\n}\n","import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\n\nexport function exioDropdown(node: HTMLSelectElement): ExioNode {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node);\n  const s = styler(node);\n  s.innerHTML = `\n    .${s.id} {\n      user-select: none;\n    }\n  `;\n  const dropdown = document.createElement('div');\n  const ds = styler(dropdown);\n  let rect = node.getBoundingClientRect();\n  let before = '';\n  let down = false;\n  const onDown = (e?: MouseEvent | TouchEvent) => {\n    before = node.style.getPropertyValue('transform');\n    node.style.setProperty('transform', 'none', 'important');\n    rect = node.getBoundingClientRect();\n    node.style.setProperty('transform', before, 'important');\n    e?.preventDefault();\n    down = true;\n    return;\n  };\n  const items: ExioNode[] = [];\n  const updateStyle = () => {\n    node.style.setProperty('transform', before, 'important');\n    const computed = getComputedStyle(node);\n    dropdown.dataset.theme = computed.getPropertyValue('--exio-theme').trim();\n    const transitionDuration = computed.getPropertyValue(\n      '--exio-standard-transition-duration'\n    );\n    const color = computed.getPropertyValue('color');\n    const backgroundColor = computed.getPropertyValue('background-color');\n    const fontFamily = computed.getPropertyValue('font-family');\n    const fontSize = computed.getPropertyValue('font-size');\n    const padding = computed.getPropertyValue('padding');\n    const topPadding = computed.getPropertyValue('padding-top');\n    const bottomPadding = computed.getPropertyValue('padding-bottom');\n    ds.innerHTML = `\n      .${ds.id} {\n        position: fixed;\n        top: ${rect.bottom}px;\n        left: ${rect.left}px;\n        width: ${rect.width}px;\n        background-color: ${backgroundColor};\n        transition: opacity ${transitionDuration};\n        color: ${color};\n        font-family: ${fontFamily};\n        font-size: ${fontSize};\n        opacity: 0;\n        pointer-events: none;\n        touch-action: none;\n        user-select: none;\n        z-index: 69420;\n      }\n      .${ds.id}:focus {\n        opacity: 1;\n        outline: none;\n        pointer-events: auto;\n        touch-action: auto;\n      }\n    `;\n    dropdown.innerHTML = '';\n    setTimeout(() => {\n      const options = node.querySelectorAll('option');\n      let firstItem: HTMLDivElement | undefined;\n      let lastItem: HTMLDivElement | undefined;\n      options.forEach((child, index) => {\n        if (child.disabled) return;\n        const item = document.createElement('div');\n        if (!firstItem) firstItem = item;\n        lastItem = item;\n        item.style.padding = padding;\n        item.style.boxSizing = 'border-box';\n        item.style.cursor = 'default';\n        item.textContent = child.textContent;\n        items.push(exioPointerEffect(item));\n        dropdown.appendChild(item);\n        item.addEventListener('click', () => {\n          node.selectedIndex = index;\n          node.dispatchEvent(new Event('change'));\n          dropdown.blur();\n        });\n      });\n      if (firstItem) firstItem.style.marginTop = topPadding;\n      if (lastItem) lastItem.style.marginBottom = bottomPadding;\n      const { height, width, left } = dropdown.getBoundingClientRect();\n      const isOverflowingY = height + rect.bottom >= window.innerHeight;\n      const topVal = isOverflowingY\n        ? Math.max(0, window.innerHeight - height)\n        : rect.bottom;\n      const isOverflowingX = width + rect.left >= window.innerWidth;\n      const leftVal = isOverflowingX\n        ? Math.max(0, window.innerWidth - width)\n        : left;\n      ds.innerHTML += `\n        .${ds.id} {\n          top: ${topVal}px;\n          left: ${leftVal}px;\n          overflow: auto;\n          max-width: ${window.innerWidth}px;\n          max-height: ${window.innerHeight}px;\n        }\n      `;\n    }, 0);\n  };\n  updateStyle();\n  document.body.appendChild(dropdown);\n  node.addEventListener('mousedown', onDown);\n  node.addEventListener('touchstart', onDown);\n  const forceFocus = () => {\n    if (!down) return;\n    down = false;\n    updateStyle();\n    dropdown.tabIndex = 0;\n    dropdown.focus();\n  };\n  node.addEventListener('click', forceFocus);\n  node.addEventListener('touchend', forceFocus);\n  const scroll = () => {\n    dropdown.blur();\n  };\n  const onBlur = () => {\n    dropdown.tabIndex = -1;\n  };\n  dropdown.addEventListener('blur', onBlur);\n  window.addEventListener('scroll', scroll);\n  window.addEventListener('resize', scroll);\n  return destroyer(() => {\n    items.forEach((item) => item.destroy());\n    window.removeEventListener('scroll', scroll);\n    window.removeEventListener('resize', scroll);\n    node.removeEventListener('mousedown', onDown);\n    node.removeEventListener('touchstart', onDown);\n    node.removeEventListener('click', forceFocus);\n    node.removeEventListener('touchend', forceFocus);\n    dropdown.removeEventListener('blur', onBlur);\n    effect.destroy();\n    s.remove();\n    dropdown.remove();\n    ds.remove();\n    component.destroy();\n  });\n}\n","import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\n\nexport const exioRadio = (node: HTMLInputElement): ExioNode => {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node, {\n    borderStyle: 'static',\n  });\n  const s1 = styler(node);\n  s1.innerHTML = `\n    .${s1.id} {\n      -webkit-appearance: none;\n      width: 20px;\n      height: 20px;\n      border-radius: 100px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0px;\n      border-color: black;\n    }\n    [data-theme=dark] .${s1.id} {\n      border-color: white;\n    }\n    .${s1.id}:not(:checked) {\n      background-color: transparent;\n    }\n  `;\n  const s2 = styler(node);\n  s2.innerHTML = `\n    .${s2.id}::after {\n      content: '';\n      position: absolute;\n      width: ${node.clientHeight}px;\n      height: ${node.clientHeight}px;\n      border-radius: 100%;\n      transform: scale(0);\n      background-color: var(--exio-radio-indicator-color);\n      transition: transform var(--exio-standard-transition-duration);\n      z-index: -1000;\n    }\n    .${s2.id}:checked::after {\n      transform: scale(0.55);\n    }\n  `;\n  return destroyer(() => {\n    effect.destroy();\n    s1.remove();\n    s2.remove();\n    component.destroy();\n  });\n};\n","import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\nimport { createExioFont } from './icon';\n\nexport const exioCheckbox = (node: HTMLInputElement): ExioNode => {\n  const component = exioComponent(node);\n  createExioFont();\n  const effect = exioPointerEffect(node, {\n    borderStyle: 'static',\n  });\n  const s1 = styler(node);\n  s1.innerHTML = `\n    .${s1.id} {\n      -webkit-appearance: none;\n      width: 20px;\n      height: 20px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0px;\n      background-color: var(--exio-checkbox-selected-fill-color);\n    }\n    .${s1.id}:not(:checked) {\n      background-color: transparent;\n    }\n  `;\n  const s2 = styler(node);\n  s2.innerHTML = `\n    .${s2.id}::after {\n      content: 'check';\n      font-family: 'Exio Icons';\n      position: absolute;\n      width: ${node.clientHeight}px;\n      height: ${node.clientHeight}px;\n      transform: scale(0);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: var(--exio-checkbox-checkmark-color);\n    }\n    .${s2.id}:checked::after {\n      transform: scale(1.1);\n    }\n  `;\n  return destroyer(() => {\n    effect.destroy();\n    s1.remove();\n    s2.remove();\n    component.destroy();\n  });\n};\n","import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\n\nexport function exioTextbox(\n  node: HTMLInputElement | HTMLTextAreaElement\n): ExioNode {\n  const component = exioComponent(node);\n  const effect = exioPointerEffect(node, {\n    disableClicking: true,\n    borderStyle: 'hover',\n    focusable: true,\n  });\n  const s = styler(node);\n  s.innerHTML = `\n    .${s.id} {\n      padding: 0.25em 0.25em;\n    }\n    .${s.id}:focus {\n      color: var(--exio-focused-text-color);\n    }\n    .${s.id}:disabled {\n      pointer-events: none;\n      touch-action: none;\n      filter: var(--exio-disabled-filter);\n    }\n  `;\n  return destroyer(() => {\n    effect.destroy();\n    s.remove();\n    component.destroy();\n  });\n}\n","import { destroyer, styler, toMillis } from './base';\nimport type { ExioNode } from './base';\nimport { exioPointerEffect } from './effects';\nimport { exioComponent } from './component';\nimport { createExioFont } from './icon';\n\nexport function exioAccordion(node: HTMLDetailsElement): ExioNode {\n  const component = exioComponent(node);\n  createExioFont();\n  const summary = node.querySelector('summary');\n  const effect = exioPointerEffect(summary, {\n    borderStyle: 'reactive',\n  });\n  const s1 = styler(summary);\n  s1.innerHTML = `\n    .${s1.id} {\n      cursor: default;\n      user-select: none;\n      position: relative;\n    }\n    .${s1.id}::marker{\n      font-size: 0px;\n    }\n    .${s1.id}:after {\n      content: 'expand_more';\n      font-family: 'Exio Icons';\n      font-size: 1.5em;\n      position: absolute;\n      right: 0.25em;\n      transform: rotate(0deg);\n      transition: transform var(--exio-slow-transition-duration);\n    }\n  `;\n  const s2 = styler(node);\n  s2.innerHTML = `\n    .${s2.id} {\n      transition: max-height var(--exio-slow-transition-duration);\n      overflow: hidden;\n    }\n  `;\n  const child = node.querySelector('*:not(summary)') as HTMLElement;\n  const s3 = styler(node);\n  const s4 = styler(summary);\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n  const summaryClickListener = (e) => {\n    if (timeout) clearTimeout(timeout);\n    const computed = getComputedStyle(summary);\n    const getT = () =>\n      toMillis(computed.getPropertyValue('--exio-slow-transition-duration'));\n    const fullHeight = summary.offsetHeight + child.offsetHeight;\n    if (node.open) {\n      e.preventDefault();\n      s3.innerHTML = `\n        .${s3.id} {\n          max-height: ${fullHeight}px;\n        }\n      `;\n      setTimeout(() => {\n        s3.innerHTML = `\n        .${s3.id} {\n          max-height: ${summary.offsetHeight}px;\n        }\n      `;\n        s4.innerHTML = `\n        .${s4.id}:after {\n          transform: rotate(0deg);\n        }\n      `;\n        timeout = setTimeout(() => {\n          node.open = false;\n        }, getT());\n      }, 0);\n    } else {\n      s3.innerHTML = `\n        .${s3.id} {\n          max-height: ${summary.offsetHeight}px;\n        }\n      `;\n      s4.innerHTML = `\n        .${s4.id}:after {\n          transform: rotate(180deg);\n        }\n      `;\n      setTimeout(() => {\n        s3.innerHTML = `\n          .${s3.id} {\n            max-height: ${fullHeight}px;\n          }\n        `;\n        timeout = setTimeout(() => {\n          s3.innerHTML = '';\n        }, getT());\n      }, 0);\n    }\n  };\n  summary.addEventListener('click', summaryClickListener);\n  return destroyer(() => {\n    effect.destroy();\n    s1.remove();\n    s2.remove();\n    s3.remove();\n    component.destroy();\n    summary.removeEventListener('click', summaryClickListener);\n  });\n}\n","import { destroyer, styler } from './base';\nimport type { ExioNode } from './base';\nimport { isSafari } from './consts';\nimport { exioComponent } from './component';\n\nexport function exioSlider(node: HTMLInputElement): ExioNode {\n  const component = exioComponent(node);\n  const s = styler(node);\n  const thumb = `\n    width: var(--exio-slider-thumb-size);\n    height: var(--exio-slider-thumb-size);\n    background-color: var(--exio-slider-thumb-color);\n    transition:\n      ${isSafari ? 'box-shadow' : 'outline'}\n      var(--exio-standard-transition-duration);\n    border: 0px solid transparent;\n    box-sizing: border-box;\n    border-radius: 1000px;\n    outline: 0px solid var(--exio-hover-body-color);\n    box-shadow: 0px 0px 0px 0px var(--exio-hover-body-color);\n    cursor: grab;\n    transform: translateZ(0);\n  `;\n  const outline1 = isSafari\n    ? 'box-shadow: 0px 0px 0px var(--exio-slider-thumb-hover-outline-size) var(--exio-hover-body-color);'\n    : 'outline: var(--exio-slider-thumb-hover-outline-size) solid var(--exio-hover-body-color);';\n  const box2 = isSafari\n    ? 'box-shadow: 0px 0px 0px var(--exio-slider-thumb-grab-outline-size) var(--exio-hover-body-color);'\n    : 'outline: var(--exio-slider-thumb-grab-outline-size) solid var(--exio-hover-body-color);';\n  const outline2 = `\n    ${box2}\n    cursor: grabbing;\n  `;\n  s.innerHTML = `\n    .${s.id} {\n      -webkit-appearance: none;\n      width: 100%;\n      height: var(--exio-slider-track-size);\n      border-radius: var(--exio-slider-track-size);\n      outline: none;\n    }\n    \n    .${s.id}::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      ${thumb}\n    }\n    \n    .${s.id}::-moz-range-thumb {\n      ${thumb}\n    }\n    \n    .${s.id}::-webkit-slider-thumb:hover {\n      ${outline1}\n    }\n\n    .${s.id}::-moz-range-thumb:hover {\n      ${outline1}\n    }\n    \n    .${s.id}::-webkit-slider-thumb:active {\n      ${outline2}\n    }\n\n    .${s.id}::-moz-range-thumb:active {\n      ${outline2}\n    }\n  `;\n  return destroyer(() => {\n    s.remove();\n    component.destroy();\n  });\n}\n","export const exampleFilenameKey = Symbol('filename');\n","<script lang=\"ts\">\n  import { setContext } from 'svelte';\n  import { exampleFilenameKey } from '../ts/constants';\n\n  export let filename = '';\n\n  setContext(exampleFilenameKey, filename);\n</script>\n\n<slot />\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","const blocks = '(if|else if|await|then|catch|each|html|debug)';\n\nPrism.languages.svelte = Prism.languages.extend('markup', {\n\teach: {\n\t\tpattern: new RegExp(\n\t\t\t'{[#/]each' +\n\t\t\t\t'(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n\t\t),\n\t\tinside: {\n\t\t\t'language-javascript': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(as[\\s\\S]*)\\([\\s\\S]*\\)(?=\\s*\\})/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(as[\\s]*)[\\s\\S]*(?=\\s*)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(#each[\\s]*)[\\s\\S]*(?=as)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t},\n\t\t\t],\n\t\t\tkeyword: /[#/]each|as/,\n\t\t\tpunctuation: /{|}/,\n\t\t},\n\t},\n\tblock: {\n\t\tpattern: new RegExp(\n\t\t\t'{[#:/@]/s' +\n\t\t\t\tblocks +\n\t\t\t\t'(?:(?:\\\\{(?:(?:\\\\{(?:[^{}])*\\\\})|(?:[^{}]))*\\\\})|(?:[^{}]))*}'\n\t\t),\n\t\tinside: {\n\t\t\tpunctuation: /^{|}$/,\n\t\t\tkeyword: [new RegExp('[#:/@]' + blocks + '( )*'), /as/, /then/],\n\t\t\t'language-javascript': {\n\t\t\t\tpattern: /[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t},\n\t\t},\n\t},\n\ttag: {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?:\"[^\"]*\"|'[^']*'|{[\\s\\S]+?}(?=[\\s/>])))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\ttag: {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^<\\/?/,\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t\t'language-javascript': {\n\t\t\t\tpattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t'language-javascript': {\n\t\t\t\t\t\tpattern: /{[\\s\\S]+}/,\n\t\t\t\t\t\tinside: Prism.languages['javascript'],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tpunctuation: /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\tnamespace: /^[^\\s>\\/:]+:/,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\t'language-javascript': {\n\t\tpattern: /\\{(?:(?:\\{(?:(?:\\{(?:[^{}])*\\})|(?:[^{}]))*\\})|(?:[^{}]))*\\}/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages['javascript'],\n\t},\n});\n\nPrism.languages.svelte['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.svelte['entity'];\n\nPrism.hooks.add('wrap', env => {\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.svelte.tag, 'addInlined', {\n\tvalue: function addInlined(tagName, lang) {\n\t\tconst includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang],\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tconst inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside,\n\t\t\t},\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang],\n\t\t};\n\n\t\tconst def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(\n\t\t\t\t\t/__/g,\n\t\t\t\t\ttagName\n\t\t\t\t),\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside,\n\t\t};\n\n\t\tPrism.languages.insertBefore('svelte', 'cdata', def);\n\t},\n});\n\nPrism.languages.svelte.tag.addInlined('style', 'css');\nPrism.languages.svelte.tag.addInlined('script', 'javascript');\n","export default \"<script lang=\\\"ts\\\">\\n  import {\\n    exioButton,\\n    exioCard,\\n    exioSwitch,\\n    exioFlyInAnimation,\\n    exioFadeInAnimation,\\n    exioIcon,\\n    exioZoomInAnimation,\\n    exioDropdown,\\n    exioRadio,\\n    exioTextbox,\\n    exioLoadingBarAnimation,\\n    exioCheckbox,\\n    exioAccordion,\\n    exioSlider,\\n  } from 'exio/svelte';\\n  import { tick } from 'svelte';\\n  import { dark, demoDialogOpen } from '../ts/stores';\\n  import Examples from './Examples.svelte';\\n  import Example from './Example.svelte';\\n\\n  let render = true;\\n  let animate = true;\\n  let buttonDisabled = true;\\n  let textDisabled = true;\\n  const range = (len: number) => new Array(len);\\n  $: colorDefault = $dark ? 'black' : 'white';\\n  $: colorInverted = $dark ? 'white' : 'black';\\n  $: if ($dark) {\\n    document.body.classList.add('dark');\\n  } else {\\n    document.body.classList.remove('dark');\\n  }\\n</script>\\n\\n{#if render}\\n  <Examples filename=\\\"Demo.svelte\\\">\\n    <div use:exioZoomInAnimation class=\\\"wrapper\\\">\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <input\\n            use:exioSwitch\\n            type=\\\"checkbox\\\"\\n            id=\\\"dark-mode\\\"\\n            bind:checked={$dark}\\n            style=\\\"\\n                  border-color: {colorInverted};\\n                  --exio-switch-selected-fill-color: var(--accent);\\n                \\\"\\n          />\\n          <label for=\\\"dark-mode\\\">Dark Mode</label>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <Example name=\\\"various-buttons\\\">\\n          <button class=\\\"gray\\\" use:exioButton>Default Button</button>\\n          <button class=\\\"blue\\\" use:exioButton>Default Button</button>\\n          <button use:exioButton use:exioIcon class=\\\"gray\\\">send</button>\\n          <button use:exioButton use:exioIcon class=\\\"cyan\\\">send</button>\\n        </Example>\\n      </div>\\n      <div class=\\\"block\\\" style=\\\"align-items: center;\\\">\\n        <button use:exioButton class=\\\"gray\\\" disabled={buttonDisabled}>\\n          Example Button\\n        </button>\\n        <div class=\\\"pair\\\">\\n          <input\\n            use:exioSwitch\\n            type=\\\"checkbox\\\"\\n            id=\\\"disable-button\\\"\\n            style=\\\"\\n            border-color: {colorInverted};\\n            --exio-switch-selected-fill-color: var(--accent);\\n          \\\"\\n            bind:checked={buttonDisabled}\\n          />\\n          <label for=\\\"disable-button\\\"><code>disabled</code> Attribute</label>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div use:exioCard class=\\\"card gray\\\">Default Card</div>\\n        <div use:exioCard class=\\\"card cyan\\\">Default Card</div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <div class=\\\"pair\\\">\\n            <input\\n              use:exioSwitch\\n              type=\\\"checkbox\\\"\\n              id=\\\"switch-option-1\\\"\\n              style=\\\"\\n                  border-color: {colorInverted};\\n                  --exio-switch-selected-fill-color: var(--accent);\\n                \\\"\\n            />\\n            <label for=\\\"switch-option-1\\\">Switch Option 1</label>\\n          </div>\\n          <div class=\\\"pair\\\">\\n            <input\\n              use:exioSwitch\\n              type=\\\"checkbox\\\"\\n              id=\\\"switch-option-2\\\"\\n              style=\\\"\\n                  border-color: var(--accent);\\n                  --exio-switch-selected-fill-color: {colorInverted};\\n                  --exio-switch-thumb-color: var(--accent);\\n                \\\"\\n            />\\n            <label for=\\\"switch-option-2\\\">Switch Option 2</label>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <div class=\\\"pair\\\">\\n            <input\\n              use:exioCheckbox\\n              type=\\\"checkbox\\\"\\n              id=\\\"checkbox-option-1\\\"\\n              style=\\\"\\n                  border-color: {colorInverted};\\n                  --exio-checkbox-selected-fill-color: {colorInverted};\\n                  --exio-checkbox-checkmark-color: {colorDefault};\\n                \\\"\\n            />\\n            <label for=\\\"checkbox-option-1\\\">Checkbox Option 1</label>\\n          </div>\\n          <div class=\\\"pair\\\">\\n            <input\\n              use:exioCheckbox\\n              type=\\\"checkbox\\\"\\n              id=\\\"checkbox-option-2\\\"\\n              style=\\\"\\n                  border-color: var(--accent);\\n                  --exio-checkbox-selected-fill-color: var(--accent);\\n                  --exio-checkbox-checkmark-color: {colorInverted};\\n                \\\"\\n            />\\n            <label for=\\\"checkbox-option-2\\\">Checkbox Option 2</label>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <div class=\\\"pair\\\">\\n            <input\\n              type=\\\"radio\\\"\\n              use:exioRadio\\n              id=\\\"radio-option-1\\\"\\n              name=\\\"radio-options\\\"\\n              style=\\\"\\n                  border-color: {colorInverted};\\n                \\\"\\n            />\\n            <label for=\\\"radio-option-1\\\">Radio Option 1</label>\\n          </div>\\n          <div class=\\\"pair\\\">\\n            <input\\n              type=\\\"radio\\\"\\n              use:exioRadio\\n              id=\\\"radio-option-2\\\"\\n              name=\\\"radio-options\\\"\\n              style=\\\"\\n                  border-color: var(--accent);\\n                  --exio-radio-indicator-color: var(--accent);\\n                \\\"\\n            />\\n            <label for=\\\"radio-option-2\\\">Radio Option 2</label>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <input\\n            type=\\\"range\\\"\\n            min=\\\"0\\\"\\n            max=\\\"69\\\"\\n            use:exioSlider\\n            style=\\\"width: 150px; margin: 20px;\\\"\\n            step=\\\"0.01\\\"\\n            class=\\\"gray\\\"\\n          />\\n          <input\\n            type=\\\"range\\\"\\n            min=\\\"0\\\"\\n            max=\\\"69\\\"\\n            use:exioSlider\\n            style=\\\"\\n                  width: 150px;\\n                  --exio-slider-thumb-color: var(--cyan);\\n                  margin: 20px;\\n                \\\"\\n            step=\\\"0.01\\\"\\n            class=\\\"gray\\\"\\n          />\\n          <input\\n            type=\\\"range\\\"\\n            min=\\\"0\\\"\\n            max=\\\"69\\\"\\n            use:exioSlider\\n            style=\\\"\\n                  width: 150px;\\n                  background-color: gray;\\n                  --exio-slider-thumb-color: var(--accent);\\n                  margin: 20px;\\n                \\\"\\n            step=\\\"0.01\\\"\\n            class=\\\"gray\\\"\\n          />\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <div class=\\\"items\\\">\\n          <input class=\\\"gray\\\" use:exioTextbox placeholder=\\\"Textfield\\\" />\\n          <textarea class=\\\"gray\\\" use:exioTextbox placeholder=\\\"Textarea\\\" />\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\" style=\\\"align-items: center;\\\">\\n        <input\\n          class=\\\"gray\\\"\\n          use:exioTextbox\\n          placeholder=\\\"Textfield\\\"\\n          disabled={textDisabled}\\n        />\\n        <div class=\\\"pair\\\">\\n          <input\\n            use:exioSwitch\\n            type=\\\"checkbox\\\"\\n            id=\\\"disable-text\\\"\\n            style=\\\"\\n            border-color: {colorInverted};\\n            --exio-switch-selected-fill-color: var(--accent);\\n          \\\"\\n            bind:checked={textDisabled}\\n          />\\n          <label for=\\\"disable-text\\\"><code>disabled</code> Attribute</label>\\n        </div>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <select use:exioDropdown class=\\\"gray\\\">\\n          {#each range(3) as _, index}\\n            <option value={index + 1}>Option {index + 1}</option>\\n          {/each}\\n        </select>\\n        <select use:exioDropdown class=\\\"blue\\\">\\n          <option disabled selected>Placeholder</option>\\n          {#each range(3) as _, index}\\n            <option value={index + 1}>Option {index + 1}</option>\\n          {/each}\\n        </select>\\n        <select use:exioDropdown class=\\\"gray\\\">\\n          <option disabled selected>Overflow</option>\\n          {#each range(69) as _, index}\\n            <option value={index + 1}>Option {index + 1}</option>\\n          {/each}\\n        </select>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <button\\n          class=\\\"gray\\\"\\n          use:exioButton\\n          on:click={() => ($demoDialogOpen = true)}\\n        >\\n          Open Dialog\\n        </button>\\n      </div>\\n      <div class=\\\"block\\\">\\n        <details use:exioAccordion style=\\\"width: 320px;\\\">\\n          <summary class=\\\"cyan\\\">Accordion</summary>\\n          <div style=\\\"padding: 1rem;\\\" class=\\\"gray\\\">\\n            Never gonna give you up <br />\\n            Never gonna let you down <br />\\n            Never gonna run around and desert you <br />\\n            Never gonna make you cry <br />\\n            Never gonna say goodbye <br />\\n            Never gonna tell a lie and hurt you <br />\\n          </div>\\n        </details>\\n      </div>\\n      <div class=\\\"block\\\" style=\\\"flex-direction: column; padding: 10px 0px;\\\">\\n        <div class=\\\"items\\\">\\n          <div\\n            use:exioLoadingBarAnimation\\n            style=\\\"\\n                  width: 300px;\\n                  height: 5px;\\n                  --exio-loader-fill-color: var(--cyan);\\n                \\\"\\n          />\\n          <div\\n            use:exioLoadingBarAnimation\\n            style=\\\"\\n                  width: 300px;\\n                  height: 5px;\\n                  --exio-loader-fill-color: var(--accent);\\n                  background-color: {colorInverted};\\n                \\\"\\n          />\\n        </div>\\n        <div>\\n          <button\\n            use:exioButton\\n            class=\\\"cyan\\\"\\n            on:click={async () => {\\n              animate = false;\\n              await tick();\\n              animate = true;\\n            }}\\n            style=\\\"\\n                  display: flex;\\n                  align-items: center;\\n                  gap: 0.25rem;\\n                \\\"\\n          >\\n            <span use:exioIcon>refresh</span>\\n            <span>Reload Animations</span>\\n          </button>\\n        </div>\\n        {#if animate}\\n          <div class=\\\"items\\\">\\n            <div use:exioCard use:exioFlyInAnimation class=\\\"card gray\\\">\\n              Fly In Animation\\n            </div>\\n            <div\\n              use:exioCard\\n              use:exioZoomInAnimation\\n              class=\\\"card blue\\\"\\n              style=\\\"--exio-zoom-in-animation-scale: 80%;\\\"\\n            >\\n              Zoom In Animation\\n            </div>\\n            <div use:exioCard use:exioFadeInAnimation class=\\\"card cyan\\\">\\n              Fade In Animation\\n            </div>\\n          </div>\\n        {/if}\\n      </div>\\n    </div>\\n  </Examples>\\n{/if}\\n\\n<style>\\n  .card {\\n    width: 150px;\\n    height: 150px;\\n  }\\n  .block {\\n    display: flex;\\n    margin: 1rem;\\n    overflow: visible;\\n    flex-direction: row;\\n    gap: 10px;\\n    flex-wrap: wrap;\\n  }\\n  .items {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    gap: 10px;\\n    flex-wrap: wrap;\\n  }\\n  .wrapper {\\n    transform-origin: center top;\\n  }\\n  .pair {\\n    display: flex;\\n    gap: 0.25rem;\\n    align-items: center;\\n  }\\n</style>\\n\"","/* eslint-disable prettier/prettier */\nimport { derived, readable } from 'svelte/store';\nimport type { Readable } from 'svelte/store';\nimport demoSrc from '../components/Demo.svelte?raw';\n\n\nexport const getSource = (filename: string): Readable<string> =>\n  readable('...', (set) => {\n    if (filename === 'Demo.svelte') {\n      set(demoSrc);\n      return;\n    }\n    set(`ERR: did not find file '${filename}'`);\n  });\n\nexport const getExample = (filename: string, name: string): Readable<string> =>\n  derived(getSource(filename), ($source) => {\n    if ($source === '...' || $source.startsWith('ERR')) return $source;\n    // parsing html with regex will cause zalgo to come\n    // so we use string methods like the sigma males that we are\n\n    // Find start of sequence, then find idx of newline\n    // <Example name=\"test-example-name\" {filename}>\n    //          ^^^^^^^^^^^^^^^^^^^^^^^^\n    const exampleStartMidLineIdx = $source.indexOf(`name=\"${name}\"`);\n    const exampleStartIdx = $source.indexOf('\\n', exampleStartMidLineIdx);\n    const exampleEndIdx = $source.indexOf('</Example>', exampleStartIdx);\n    const exampleSource = $source.substring(exampleStartIdx, exampleEndIdx);\n\n    // exampleSource will start like\n    // \\n      <Component\n    // ^^^^^^^^\n    // whitespace to remove\n    const amountSpaces = exampleSource.indexOf('<') - 1;\n    return exampleSource\n      .replaceAll(`\\n${' '.repeat(amountSpaces)}`, '\\n')\n      .trim();\n  });\n\n","<script lang=\"ts\">\n  import Prism from 'prismjs';\n  import 'prism-svelte';\n  import 'prismjs/themes/prism.css';\n\n  import { getContext } from 'svelte';\n  import { exioAccordion } from 'exio/svelte';\n\n  import { getExample } from '../ts/example.ts';\n  import { exampleFilenameKey } from '../ts/constants.ts';\n\n  export let name = '';\n\n  const filename = getContext(exampleFilenameKey) as string;\n\n  $: exampleSource = getExample(filename, name);\n</script>\n\n<div class=\"example\">\n  <div class=\"example-content\">\n    <slot />\n  </div>\n  <details use:exioAccordion>\n    <summary class=\"cyan\">View Source</summary>\n    <div class=\"example-src\">\n      <pre\n        class=\"language-svelte\">\n        {@html Prism.highlight($exampleSource, Prism.languages.svelte, 'svelte')}\n      </pre>\n    </div>\n  </details>\n</div>\n\n<style>\n  .example {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding-bottom: 1rem;\n  }\n\n  .example::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    width: 70vw;\n    height: 1px;\n    background-color: white;\n  }\n\n  details {\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import {\n    exioButton,\n    exioCard,\n    exioSwitch,\n    exioFlyInAnimation,\n    exioFadeInAnimation,\n    exioIcon,\n    exioZoomInAnimation,\n    exioDropdown,\n    exioRadio,\n    exioTextbox,\n    exioLoadingBarAnimation,\n    exioCheckbox,\n    exioAccordion,\n    exioSlider,\n  } from 'exio/svelte';\n  import { tick } from 'svelte';\n  import { dark, demoDialogOpen } from '../ts/stores';\n  import Examples from './Examples.svelte';\n  import Example from './Example.svelte';\n\n  let render = true;\n  let animate = true;\n  let buttonDisabled = true;\n  let textDisabled = true;\n  const range = (len: number) => new Array(len);\n  $: colorDefault = $dark ? 'black' : 'white';\n  $: colorInverted = $dark ? 'white' : 'black';\n  $: if ($dark) {\n    document.body.classList.add('dark');\n  } else {\n    document.body.classList.remove('dark');\n  }\n</script>\n\n{#if render}\n  <Examples filename=\"Demo.svelte\">\n    <div use:exioZoomInAnimation class=\"wrapper\">\n      <div class=\"block\">\n        <div class=\"items\">\n          <input\n            use:exioSwitch\n            type=\"checkbox\"\n            id=\"dark-mode\"\n            bind:checked={$dark}\n            style=\"\n                  border-color: {colorInverted};\n                  --exio-switch-selected-fill-color: var(--accent);\n                \"\n          />\n          <label for=\"dark-mode\">Dark Mode</label>\n        </div>\n      </div>\n      <div class=\"block\">\n        <Example name=\"various-buttons\">\n          <button class=\"gray\" use:exioButton>Default Button</button>\n          <button class=\"blue\" use:exioButton>Default Button</button>\n          <button use:exioButton use:exioIcon class=\"gray\">send</button>\n          <button use:exioButton use:exioIcon class=\"cyan\">send</button>\n        </Example>\n      </div>\n      <div class=\"block\" style=\"align-items: center;\">\n        <button use:exioButton class=\"gray\" disabled={buttonDisabled}>\n          Example Button\n        </button>\n        <div class=\"pair\">\n          <input\n            use:exioSwitch\n            type=\"checkbox\"\n            id=\"disable-button\"\n            style=\"\n            border-color: {colorInverted};\n            --exio-switch-selected-fill-color: var(--accent);\n          \"\n            bind:checked={buttonDisabled}\n          />\n          <label for=\"disable-button\"><code>disabled</code> Attribute</label>\n        </div>\n      </div>\n      <div class=\"block\">\n        <div use:exioCard class=\"card gray\">Default Card</div>\n        <div use:exioCard class=\"card cyan\">Default Card</div>\n      </div>\n      <div class=\"block\">\n        <div class=\"items\">\n          <div class=\"pair\">\n            <input\n              use:exioSwitch\n              type=\"checkbox\"\n              id=\"switch-option-1\"\n              style=\"\n                  border-color: {colorInverted};\n                  --exio-switch-selected-fill-color: var(--accent);\n                \"\n            />\n            <label for=\"switch-option-1\">Switch Option 1</label>\n          </div>\n          <div class=\"pair\">\n            <input\n              use:exioSwitch\n              type=\"checkbox\"\n              id=\"switch-option-2\"\n              style=\"\n                  border-color: var(--accent);\n                  --exio-switch-selected-fill-color: {colorInverted};\n                  --exio-switch-thumb-color: var(--accent);\n                \"\n            />\n            <label for=\"switch-option-2\">Switch Option 2</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"items\">\n          <div class=\"pair\">\n            <input\n              use:exioCheckbox\n              type=\"checkbox\"\n              id=\"checkbox-option-1\"\n              style=\"\n                  border-color: {colorInverted};\n                  --exio-checkbox-selected-fill-color: {colorInverted};\n                  --exio-checkbox-checkmark-color: {colorDefault};\n                \"\n            />\n            <label for=\"checkbox-option-1\">Checkbox Option 1</label>\n          </div>\n          <div class=\"pair\">\n            <input\n              use:exioCheckbox\n              type=\"checkbox\"\n              id=\"checkbox-option-2\"\n              style=\"\n                  border-color: var(--accent);\n                  --exio-checkbox-selected-fill-color: var(--accent);\n                  --exio-checkbox-checkmark-color: {colorInverted};\n                \"\n            />\n            <label for=\"checkbox-option-2\">Checkbox Option 2</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"items\">\n          <div class=\"pair\">\n            <input\n              type=\"radio\"\n              use:exioRadio\n              id=\"radio-option-1\"\n              name=\"radio-options\"\n              style=\"\n                  border-color: {colorInverted};\n                \"\n            />\n            <label for=\"radio-option-1\">Radio Option 1</label>\n          </div>\n          <div class=\"pair\">\n            <input\n              type=\"radio\"\n              use:exioRadio\n              id=\"radio-option-2\"\n              name=\"radio-options\"\n              style=\"\n                  border-color: var(--accent);\n                  --exio-radio-indicator-color: var(--accent);\n                \"\n            />\n            <label for=\"radio-option-2\">Radio Option 2</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"items\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"69\"\n            use:exioSlider\n            style=\"width: 150px; margin: 20px;\"\n            step=\"0.01\"\n            class=\"gray\"\n          />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"69\"\n            use:exioSlider\n            style=\"\n                  width: 150px;\n                  --exio-slider-thumb-color: var(--cyan);\n                  margin: 20px;\n                \"\n            step=\"0.01\"\n            class=\"gray\"\n          />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"69\"\n            use:exioSlider\n            style=\"\n                  width: 150px;\n                  background-color: gray;\n                  --exio-slider-thumb-color: var(--accent);\n                  margin: 20px;\n                \"\n            step=\"0.01\"\n            class=\"gray\"\n          />\n        </div>\n      </div>\n      <div class=\"block\">\n        <div class=\"items\">\n          <input class=\"gray\" use:exioTextbox placeholder=\"Textfield\" />\n          <textarea class=\"gray\" use:exioTextbox placeholder=\"Textarea\" />\n        </div>\n      </div>\n      <div class=\"block\" style=\"align-items: center;\">\n        <input\n          class=\"gray\"\n          use:exioTextbox\n          placeholder=\"Textfield\"\n          disabled={textDisabled}\n        />\n        <div class=\"pair\">\n          <input\n            use:exioSwitch\n            type=\"checkbox\"\n            id=\"disable-text\"\n            style=\"\n            border-color: {colorInverted};\n            --exio-switch-selected-fill-color: var(--accent);\n          \"\n            bind:checked={textDisabled}\n          />\n          <label for=\"disable-text\"><code>disabled</code> Attribute</label>\n        </div>\n      </div>\n      <div class=\"block\">\n        <select use:exioDropdown class=\"gray\">\n          {#each range(3) as _, index}\n            <option value={index + 1}>Option {index + 1}</option>\n          {/each}\n        </select>\n        <select use:exioDropdown class=\"blue\">\n          <option disabled selected>Placeholder</option>\n          {#each range(3) as _, index}\n            <option value={index + 1}>Option {index + 1}</option>\n          {/each}\n        </select>\n        <select use:exioDropdown class=\"gray\">\n          <option disabled selected>Overflow</option>\n          {#each range(69) as _, index}\n            <option value={index + 1}>Option {index + 1}</option>\n          {/each}\n        </select>\n      </div>\n      <div class=\"block\">\n        <button\n          class=\"gray\"\n          use:exioButton\n          on:click={() => ($demoDialogOpen = true)}\n        >\n          Open Dialog\n        </button>\n      </div>\n      <div class=\"block\">\n        <details use:exioAccordion style=\"width: 320px;\">\n          <summary class=\"cyan\">Accordion</summary>\n          <div style=\"padding: 1rem;\" class=\"gray\">\n            Never gonna give you up <br />\n            Never gonna let you down <br />\n            Never gonna run around and desert you <br />\n            Never gonna make you cry <br />\n            Never gonna say goodbye <br />\n            Never gonna tell a lie and hurt you <br />\n          </div>\n        </details>\n      </div>\n      <div class=\"block\" style=\"flex-direction: column; padding: 10px 0px;\">\n        <div class=\"items\">\n          <div\n            use:exioLoadingBarAnimation\n            style=\"\n                  width: 300px;\n                  height: 5px;\n                  --exio-loader-fill-color: var(--cyan);\n                \"\n          />\n          <div\n            use:exioLoadingBarAnimation\n            style=\"\n                  width: 300px;\n                  height: 5px;\n                  --exio-loader-fill-color: var(--accent);\n                  background-color: {colorInverted};\n                \"\n          />\n        </div>\n        <div>\n          <button\n            use:exioButton\n            class=\"cyan\"\n            on:click={async () => {\n              animate = false;\n              await tick();\n              animate = true;\n            }}\n            style=\"\n                  display: flex;\n                  align-items: center;\n                  gap: 0.25rem;\n                \"\n          >\n            <span use:exioIcon>refresh</span>\n            <span>Reload Animations</span>\n          </button>\n        </div>\n        {#if animate}\n          <div class=\"items\">\n            <div use:exioCard use:exioFlyInAnimation class=\"card gray\">\n              Fly In Animation\n            </div>\n            <div\n              use:exioCard\n              use:exioZoomInAnimation\n              class=\"card blue\"\n              style=\"--exio-zoom-in-animation-scale: 80%;\"\n            >\n              Zoom In Animation\n            </div>\n            <div use:exioCard use:exioFadeInAnimation class=\"card cyan\">\n              Fade In Animation\n            </div>\n          </div>\n        {/if}\n      </div>\n    </div>\n  </Examples>\n{/if}\n\n<style>\n  .card {\n    width: 150px;\n    height: 150px;\n  }\n  .block {\n    display: flex;\n    margin: 1rem;\n    overflow: visible;\n    flex-direction: row;\n    gap: 10px;\n    flex-wrap: wrap;\n  }\n  .items {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    flex-wrap: wrap;\n  }\n  .wrapper {\n    transform-origin: center top;\n  }\n  .pair {\n    display: flex;\n    gap: 0.25rem;\n    align-items: center;\n  }\n</style>\n","<script lang=\"ts\">\n  import {\n    exioFadeInAnimation,\n    exioZoomInAnimation,\n    exioButton,\n    exioIcon,\n  } from 'exio/svelte';\n  import { _ } from 'svelte-i18n';\n  import Demo from './Demo.svelte';\n  const links = [\n    {\n      title: $_('banner.buttons.npm'),\n      href: 'https://www.npmjs.com/package/exio',\n      icon: 'open_in_new',\n      newTab: true,\n    },\n    {\n      title: $_('banner.buttons.github'),\n      href: 'https://github.com/KentoNishi/exio',\n      icon: 'open_in_new',\n      newTab: true,\n    },\n    {\n      title: $_('banner.buttons.docs'),\n      href: '#/docs',\n      icon: 'description',\n      newTab: false,\n    },\n  ];\n  const format = (code: string, depth = 0) => {\n    let lines = code.split('\\n');\n    const lenTabs = lines[1].search(/\\S|$/);\n    lines = lines\n      .splice(depth ? 0 : 1)\n      .map(\n        (line) =>\n          (line.replace(/ /g, '') !== '' ? ' '.repeat(depth) : '') +\n          line.substr(lenTabs)\n      );\n    return lines.join('\\n');\n  };\n  const c = (code: string, styles: string) => {\n    return format(code) + `\\n<${'style'}>${format(styles, 2)}</${'style'}>`;\n  };\n</script>\n\n<div use:exioZoomInAnimation style=\"margin-top: 50px;\">\n  <div class=\"gradient-banner\" use:exioFadeInAnimation>\n    <span class=\"title\">{$_('title')}</span>\n    <span class=\"description\">{$_('description')}</span>\n    <div class=\"buttons\">\n      {#each links as link}\n        <a href={link.href} target={link.newTab ? '_blank' : ''}>\n          <button class=\"bg-gray\" style=\"cursor: pointer;\" use:exioButton>\n            {link.title}\n            <span use:exioIcon>{link.icon}</span>\n          </button>\n        </a>\n      {/each}\n    </div>\n  </div>\n  <div class=\"section\">\n    <div class=\"content\">\n      <div class=\"title\">{$_('about.title')}</div>\n      <div class=\"desc\">{$_('about.description')}</div>\n    </div>\n  </div>\n  <div class=\"section\">\n    <div class=\"content\">\n      <div class=\"title\">{$_('demo.title')}</div>\n      <Demo />\n    </div>\n  </div>\n</div>\n\n<style>\n  .gradient-banner {\n    width: 100%;\n    height: max(50vh, 400px);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n  .gradient-banner > .title {\n    font-size: 8rem;\n    font-weight: bold;\n    background: linear-gradient(135deg, #2cd17e 0%, #30cde2 46%, #0066ff 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    color: transparent;\n  }\n  :global([data-theme='dark']) {\n    --accent: #0065c7;\n  }\n  :global([data-theme='light']) {\n    --accent: #5dceff;\n  }\n  :global([data-theme='dark']) .gradient-banner {\n    background-color: #090a1b;\n  }\n  :global([data-theme='light']) .gradient-banner {\n    background-color: #d1f4ff;\n  }\n  :global([data-theme='dark']) .bg-gray {\n    background-color: #2f2f2f;\n  }\n  :global([data-theme='light']) .bg-gray {\n    background-color: #bebebe;\n  }\n  .gradient-banner > .description {\n    font-size: 2rem;\n    font-weight: bold;\n    text-align: center;\n    max-width: 600px;\n  }\n  .gradient-banner > .buttons {\n    margin: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    flex-wrap: wrap;\n  }\n  .section {\n    padding: 1rem;\n    display: flex;\n    justify-content: center;\n  }\n  .section > .content {\n    max-width: 1200px;\n    font-size: 1rem;\n    margin-top: 1rem;\n    width: 100%;\n  }\n  .section > .content > .title {\n    font-size: 2rem;\n    font-weight: bold;\n    text-align: left;\n    width: 100%;\n  }\n  .section > .content > .desc {\n    margin-top: 1rem;\n  }\n  * {\n    -webkit-tap-highlight-color: transparent;\n  }\n</style>\n"],"names":["global","Prism"],"mappings":"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"}